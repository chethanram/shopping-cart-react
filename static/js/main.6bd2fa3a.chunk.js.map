{"version":3,"sources":["services/util.js","services/shelf/actions.js","components/Spinner/index.js","components/Selectbox/index.js","components/Shelf/Sort/index.js","services/sort/actions.js","services/sort/actionTypes.js","components/Shelf/Search/index.js","services/search/actions.js","services/search/actionTypes.js","components/Shelf/ShelfHeader/index.js","components/Thumb/index.js","components/Shelf/ProductList/Product/index.js","services/cart/actions.js","services/cart/actionTypes.js","components/Shelf/ProductList/index.js","components/Shelf/index.js","services/shelf/actionTypes.js","components/Shelf/Filter/index.js","services/filters/actions.js","services/filters/actionTypes.js","components/FloatCart/CartProduct/index.js","components/FloatCart/index.js","services/total/actions.js","services/total/actionTypes.js","components/App/index.js","services/shelf/reducer.js","services/cart/reducer.js","services/total/reducer.js","services/filters/reducer.js","services/sort/reducer.js","services/search/reducer.js","services/reducers.js","services/store.js","Root.js","index.js"],"names":["formatPrice","x","currency","toFixed","replace","compare","lowestprice","a","b","price","highestprice","Spinner","react_default","createElement","className","Selectbox","_ref","options","classes","handleOnChange","onChange","e","target","value","map","o","key","label","createOptions","sortBy","connect","state","sort","type","updateSort","payload","components_Selectbox","search","updateSearch","ShelfHeader","props","Shelf_Sort","Shelf_Search","Thumb","src","alt","title","addProduct","product","quantity","onClick","components_Thumb","img_url","name","discount","ProductList","products","p","ProductList_Product","id","Shelf","isLoading","handleFetchProducts","filters","arguments","length","undefined","_this","setState","fetchProducts","this","nextProps","nextFilters","nextSort","nextSearch","Fragment","Shelf_ShelfHeader","productsLength","Shelf_ProductList","Component","shelf","items","callback","dispatch","axios","get","then","res","data","filter","Object","keys","some","toString","toLowerCase","includes","catch","err","console","log","Filter","inputValue","toggleCheckbox","changedPrice","updateFilters","selectedCheckboxes","Set","min","max","step","CartProduct","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleMouseOver","isMouseOver","handleMouseOut","handleOnIncrease","changeProductQuantity","handleOnDecrease","_this2","removeProduct","push","join","onMouseOver","onMouseOut","FloatCart","isOpen","openFloatCart","closeFloatCart","_this$props","cartProducts","updateCart","productAlreadyInCart","forEach","cp","_this$props2","index","findIndex","splice","proceedToCheckout","_this$props$cartTotal","cartTotal","totalPrice","productQuantity","currencyFormat","currencyId","alert","concat","changedProduct","_this$props3","find","newProduct","productToRemove","productToChange","_this$props4","FloatCart_CartProduct","cart","productToAdd","total","loadCart","reduce","sum","installments","greater","App","Shelf_Filter","components_Shelf","components_FloatCart","initialState","combineReducers","action","objectSpread","assign","services_store","JSON","parse","window","localStorage","getItem","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","subscribe","getState","persist","setItem","stringify","Root","children","_ref$initialState","es","ReactDOM","render","src_Root","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.6bd2fa3a.chunk.js","sourcesContent":["export const formatPrice = (x, currency) => {\n  switch (currency) {\n    case 'INR':\n      return x.toFixed(2).replace('.', ',');\n    default:\n      return x.toFixed(2);\n  }\n};\n\nexport const productsAPI =\n  'https://api.myjson.com/bins/qzuzi';\n","import { FETCH_PRODUCTS } from './actionTypes';\nimport axios from 'axios';\n\nimport { productsAPI } from '../util';\n\nconst compare = {\n  lowestprice: (a, b) => {\n    if (a.price < b.price) return -1;\n    if (a.price > b.price) return 1;\n    return 0;\n  },\n  highestprice: (a, b) => {\n    if (a.price > b.price) return -1;\n    if (a.price < b.price) return 1;\n    return 0;\n  }\n};\n\nexport const fetchProducts = (filters, sortBy, search, callback) => dispatch => {\n  return axios\n    .get(productsAPI)\n    .then(res => {\n      var products  = res.data;\n\n      if (!!filters && filters.length > 0) {\n        products = products.filter(p => p.price <= filters  );\n      }\n\n      if (!!sortBy) {\n        products = products.sort(compare[sortBy]);\n      }\n\n      if(!!search){\n        products = products.filter(p => Object.keys(p).some(key => p[key].toString().toLowerCase().includes(search.toLowerCase())));\n      }\n\n      if (!!callback) {\n        callback();\n      }\n\n      return dispatch({\n        type: FETCH_PRODUCTS,\n        payload: products\n      });\n    })\n    .catch(err => {\n      console.log('Could not fetch products. Try again later.');\n    });\n};\n","import React from 'react';\n\nimport './style.scss';\n\nexport default () => (\n  <div className=\"spinner lds-ring\">\n    <div />\n    <div />\n    <div />\n    <div />\n  </div>\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Selectbox = ({ options, classes, handleOnChange }) => {\n  const createOptions = options =>\n    options.map(o => (\n      <option value={o.value} key={o.value}>\n        {o.label}\n      </option>\n    ));\n\n  return (\n    <select onChange={e => handleOnChange(e.target.value)} className={classes}>\n      {createOptions(options)}\n    </select>\n  );\n};\n\nSelectbox.propTypes = {\n  options: PropTypes.array.isRequired,\n  classes: PropTypes.string,\n  handleOnChange: PropTypes.func.isRequired\n};\n\nexport default Selectbox;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { updateSort } from '../../../services/sort/actions';\nimport Selectbox from '../../Selectbox';\n\nconst sortBy = [\n  { value: '', label: 'Select' },\n  { value: 'lowestprice', label: 'Lowest to highest' },\n  { value: 'highestprice', label: 'Highest to lowest' }\n];\n\nconst Sort = ({ updateSort, sort }) => (\n  <div className=\"sort\">\n    Order by\n    <Selectbox options={sortBy} handleOnChange={value => updateSort(value)} />\n  </div>\n);\n\nSort.propTypes = {\n  updateSort: PropTypes.func.isRequired,\n  sort: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = state => ({\n  sort: state.sort.type\n});\n\nexport default connect(\n  mapStateToProps,\n  { updateSort }\n)(Sort);\n","import { UPDATE_SORT } from './actionTypes';\n\nexport const updateSort = sort => ({\n  type: UPDATE_SORT,\n  payload: sort\n});\n","export const UPDATE_SORT = 'UPDATE_SORT';\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { updateSearch } from '../../../services/search/actions';\n\n\nconst Search = ({ updateSearch, search }) => (\n  <div className=\"search\">\n    Search\n    <input type='text' onChange={e => updateSearch(e.target.value)}/>\n  </div>\n);\n\nSearch.propTypes = {\n  updateSearch: PropTypes.func.isRequired,\n  search: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = state => ({\n  search: state.search.type\n});\n\nexport default connect(\n  mapStateToProps,\n  { updateSearch }\n)(Search);\n","import { UPDATE_SEARCH } from './actionTypes';\n\nexport const updateSearch = search => ({\n  type: UPDATE_SEARCH,\n  payload: search\n});\n","export const UPDATE_SEARCH = 'UPDATE_SEARCH';\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Sort from '../Sort';\nimport Search from '../Search';\n\nconst ShelfHeader = props => {\n  return (\n    <div className=\"shelf-container-header\">\n      <Sort />\n      <Search />\n    </div>\n  );\n};\n\nShelfHeader.propTypes = {\n  productsLength: PropTypes.number.isRequired\n};\n\nexport default ShelfHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Thumb = props => (\n  <div className={props.classes}>\n    <img src={props.src} alt={props.alt} title={props.title} />\n  </div>\n);\n\nThumb.propTypes = {\n  alt: PropTypes.string,\n  title: PropTypes.string,\n  classes: PropTypes.string,\n  src: PropTypes.string.isRequired\n};\n\nexport default Thumb;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport Thumb from '../../../Thumb';\nimport { addProduct } from '../../../../services/cart/actions';\n\nconst Product = ({ product, addProduct }) => {\n  product.quantity = 1;\n\n\n\n  return (\n    <div\n      className=\"shelf-item\"\n      onClick={() => addProduct(product)}\n    >\n    \n      <Thumb\n        classes=\"shelf-item__thumb\"\n        src={product.img_url}\n        alt={product.name}\n      />\n      <p className=\"shelf-item__title\">{product.name}</p>\n      <div className=\"shelf-item__price\">\n        {product.price} <del>{product.price*(product.discount/100) + product.price} </del>\n        <span className='shelf-item__success'>{product.discount}% off </span>\n      </div>\n      <div className=\"shelf-item__buy-btn\">Add to cart</div>\n    </div>\n  );\n};\n\nProduct.propTypes = {\n  product: PropTypes.object.isRequired,\n  addProduct: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { addProduct }\n)(Product);\n","import { LOAD_CART, ADD_PRODUCT, REMOVE_PRODUCT, CHANGE_PRODUCT_QUANTITY } from './actionTypes';\n\nexport const loadCart = products => ({\n  type: LOAD_CART,\n  payload: products\n});\n\nexport const addProduct = product => ({\n  type: ADD_PRODUCT,\n  payload: product\n});\n\nexport const removeProduct = product => ({\n  type: REMOVE_PRODUCT,\n  payload: product\n});\n\nexport const changeProductQuantity = product => ({\n  type: CHANGE_PRODUCT_QUANTITY,\n  payload: product\n});","export const LOAD_CART = 'LOAD_CART';\nexport const ADD_PRODUCT = 'ADD_PRODUCT';\nexport const REMOVE_PRODUCT = 'REMOVE_PRODUCT';\nexport const CHANGE_PRODUCT_QUANTITY = 'CHANGE_PRODUCT_QUANTITY';\nexport const UPDATE_CART = 'UPDATE_CART';\n","import React from 'react';\n\nimport Product from './Product';\n\nconst ProductList = ({ products }) => {\n  return products.map(p => {\n    return <Product product={p} key={p.id} />;\n  });\n};\n\nexport default ProductList;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { fetchProducts } from '../../services/shelf/actions';\n\nimport Spinner from '../Spinner';\nimport ShelfHeader from './ShelfHeader';\nimport ProductList from './ProductList';\n\nimport './style.scss';\n\nclass Shelf extends Component {\n  static propTypes = {\n    fetchProducts: PropTypes.func.isRequired,\n    products: PropTypes.array.isRequired,\n    filters: PropTypes.number,\n    sort: PropTypes.string,\n    search: PropTypes.string\n  };\n\n  state = {\n    isLoading: false\n  };\n\n  componentDidMount() {\n    this.handleFetchProducts();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { filters: nextFilters, sort: nextSort , search: nextSearch} = nextProps;\n    const { filters } = this.props;\n    if (nextFilters.length !== filters.length) {\n      this.handleFetchProducts(nextFilters, undefined, undefined);\n    }\n\n    if (nextSort !== this.props.sort) {\n      this.handleFetchProducts(undefined, nextSort, undefined);\n    }\n\n    if(nextSearch !== this.props.search){\n        this.handleFetchProducts(undefined,undefined, nextSearch);\n    }\n  }\n\n  handleFetchProducts = (\n    filters = this.props.filters,\n    sort = this.props.sort,\n    search = this.props.search\n  ) => {\n    this.setState({ isLoading: true });\n    this.props.fetchProducts(filters, sort, search, () => {\n      this.setState({ isLoading: false });\n    });\n  };\n\n  render() {\n    const { products } = this.props;\n    const { isLoading } = this.state;\n\n    return (\n      <React.Fragment>\n        {isLoading && <Spinner />}\n        <div className=\"shelf-container\">\n          <ShelfHeader productsLength={products.length} />\n          <ProductList products={products} />\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  products: state.shelf.products,\n  filters: state.filters.items,\n  sort: state.sort.type,\n  search: state.search.type\n});\n\nexport default connect(\n  mapStateToProps,\n  { fetchProducts }\n)(Shelf);\n","export const FETCH_PRODUCTS = 'FETCH_PRODUCTS';\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { updateFilters } from '../../../services/filters/actions';\n\nimport './style.scss';\n\nclass Filter extends Component {\n  static propTypes = {\n    updateFilters: PropTypes.func.isRequired,\n    filters: PropTypes.number\n  };\n  state = {\n    inputValue: 0\n  }\n\n  componentDidMount() {\n    this.selectedCheckboxes = new Set();\n  }\n\n  toggleCheckbox = () => {\n        var changedPrice = this.state.inputValue;\n\n    this.props.updateFilters(changedPrice);\n  };\n\n  inputValue = e => this.setState({inputValue:e.target.value});\n\n  render() {\n    return (\n      <div className=\"filters\">\n        <h4 className=\"title\">Filters: &lt; {this.state.inputValue}</h4>\n         <div>\n            <span >100</span>\n            <input  type=\"range\" min=\"100\" max=\"700\" onChange={this.inputValue} step=\"100\"/>\n            <span>700</span>\n            <p><input type=\"submit\" className='__applyBtn' value=\"submit\" onClick={this.toggleCheckbox} /></p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { updateFilters }\n)(Filter);\n","import { UPDATE_FILTER } from './actionTypes';\n\nexport const updateFilters = filters => ({\n  type: UPDATE_FILTER,\n  payload: filters\n});\n","export const UPDATE_FILTER = 'UPDATE_FILTER';\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Thumb from './../../Thumb';\n\nclass CartProduct extends Component {\n  static propTypes = {\n    product: PropTypes.object.isRequired,\n    removeProduct: PropTypes.func.isRequired,\n    changeProductQuantity: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      product: this.props.product,\n      isMouseOver: false\n    };\n  }\n\n  handleMouseOver = () => {\n    this.setState({ isMouseOver: true });\n  };\n\n  handleMouseOut = () => {\n    this.setState({ isMouseOver: false });\n  };\n\n  handleOnIncrease = () => {\n    const { changeProductQuantity } = this.props;\n    const { product } = this.state;\n    product.quantity = product.quantity + 1;\n    changeProductQuantity(product);\n  }\n\n  handleOnDecrease = () => {\n    const { changeProductQuantity } = this.props;\n    const { product } = this.state;\n    product.quantity = product.quantity - 1;\n    changeProductQuantity(product);\n  }\n\n  render() {\n    const { removeProduct } = this.props;\n    const { product } = this.state;\n\n    const classes = ['shelf-item'];\n\n    if (!!this.state.isMouseOver) {\n      classes.push('shelf-item--mouseover');\n    }\n\n    return (\n      <div className={classes.join(' ')}>\n        <div\n          className=\"shelf-item__del\"\n          onMouseOver={() => this.handleMouseOver()}\n          onMouseOut={() => this.handleMouseOut()}\n          onClick={() => removeProduct(product)}\n        > REMOVE </div>\n        <Thumb\n          classes=\"shelf-item__thumb\"\n          src={product.img_url}\n          alt={product.name}\n        />\n        <div className=\"shelf-item__details\">\n          <p className=\"title\">{product.name}</p>\n          <p className=\"desc\">\n            {product.price} <del>{product.price*(product.discount/100) + product.price} </del>\n            <span className='shelf-item__success'>{product.discount}% off </span>\n          </p>\n        </div>\n        <div className=\"shelf-item__price\">\n          \n          <div>\n            <button onClick={this.handleOnDecrease}  className=\"change-product-button\">-</button>\n            <label> {product.quantity} </label>\n            <button onClick={this.handleOnIncrease} className=\"change-product-button\">+</button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CartProduct;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { loadCart, removeProduct, changeProductQuantity } from '../../services/cart/actions';\nimport { updateCart } from '../../services/total/actions';\nimport CartProduct from './CartProduct';\nimport { formatPrice } from '../../services/util';\n\nimport './style.scss';\n\nclass FloatCart extends Component {\n  static propTypes = {\n    loadCart: PropTypes.func.isRequired,\n    updateCart: PropTypes.func.isRequired,\n    cartProducts: PropTypes.array.isRequired,\n    newProduct: PropTypes.object,\n    removeProduct: PropTypes.func,\n    productToRemove: PropTypes.object,\n    changeProductQuantity: PropTypes.func,\n    productToChange: PropTypes.object,\n  };\n\n  state = {\n    isOpen: false\n  };\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.newProduct !== this.props.newProduct) {\n      this.addProduct(nextProps.newProduct);\n    }\n\n    if (nextProps.productToRemove !== this.props.productToRemove) {\n      this.removeProduct(nextProps.productToRemove);\n    }\n\n    if (nextProps.productToChange !== this.props.productToChange) {\n      this.changeProductQuantity(nextProps.productToChange);\n    }\n  }\n\n  openFloatCart = () => {\n    this.setState({ isOpen: true });\n  };\n\n  closeFloatCart = () => {\n    this.setState({ isOpen: false });\n  };\n\n  addProduct = product => {\n    const { cartProducts, updateCart } = this.props;\n    let productAlreadyInCart = false;\n\n    cartProducts.forEach(cp => {\n      if (cp.id === product.id) {\n        cp.quantity += product.quantity;\n        productAlreadyInCart = true;\n      }\n    });\n\n    if (!productAlreadyInCart) {\n      cartProducts.push(product);\n    }\n\n    updateCart(cartProducts);\n    this.openFloatCart();\n  };\n\n  removeProduct = product => {\n    const { cartProducts, updateCart } = this.props;\n\n    const index = cartProducts.findIndex(p => p.id === product.id);\n    if (index >= 0) {\n      cartProducts.splice(index, 1);\n      updateCart(cartProducts);\n    }\n  };\n\n  proceedToCheckout = () => {\n    const {\n      totalPrice,\n      productQuantity,\n      currencyFormat,\n      currencyId\n    } = this.props.cartTotal;\n\n    if (!productQuantity) {\n      alert('Add some product in the cart!');\n    } else {\n      alert(\n        `Checkout - Subtotal: ${currencyFormat} ${formatPrice(\n          totalPrice,\n          currencyId\n        )}`\n      );\n    }\n  };\n\n  changeProductQuantity = changedProduct => {\n    const { cartProducts, updateCart } = this.props;\n\n    const product = cartProducts.find(p => p.id === changedProduct.id);\n    product.quantity = changedProduct.quantity;\n    if (product.quantity <= 0) {\n      this.removeProduct(product);\n    }\n    updateCart(cartProducts);\n  }\n\n  render() {\n    const { cartTotal, cartProducts, removeProduct, changeProductQuantity } = this.props;\n\n    const products = cartProducts.map(p => {\n      return (\n        <CartProduct product={p} removeProduct={removeProduct} changeProductQuantity={changeProductQuantity} key={p.id} />\n      );\n    });\n\n    let classes = ['float-cart'];\n\n    if (!!this.state.isOpen) {\n      classes.push('float-cart--open');\n    }\n\n    return (\n      <div className={classes.join(' ')}>\n        {/* If cart open, show close (x) button */}\n        {this.state.isOpen && (\n          <div\n            onClick={() => this.closeFloatCart()}\n            className=\"float-cart__close-btn\"\n          >\n            Home\n          </div>\n        )}\n\n        {/* If cart is closed, show bag with quantity of product and open cart action */}\n        {!this.state.isOpen && (\n          <span\n            onClick={() => this.openFloatCart()}\n            className=\"bag bag--float-cart-closed\"\n          >\n            <span className=\"bag__quantity\">{cartTotal.productQuantity}</span>\n          </span>\n        )}\n\n        <div className=\"float-cart__content\">\n          <div className=\"float-cart__header\">\n            <span className=\"bag\">\n              <span className=\"bag__quantity\">{cartTotal.productQuantity}</span>\n            </span>\n            <span className=\"header-title\">Cart</span>\n          </div>\n\n          <div className=\"float-cart__shelf-container\">\n            {products}\n            {!products.length && (\n              <p className=\"shelf-empty\">\n                Add some products in the cart <br />\n                :)\n              </p>\n            )}\n          </div>\n\n          <div className=\"float-cart__footer\">\n            <h3>PRICE DETAILS</h3>\n            {/* <div className=\"sub\">Price (1 item)</div>\n             <div className=\"sub-price\">\n              <p className=\"sub-price__val\">\n                {products.price*(products.discount/100) + products.price}\n              </p>\n            </div>\n                <div className=\"sub\">Discount</div>\n             <div className=\"sub-price\">\n              <p className=\"sub-price__val\">\n                 {products.discount}\n              </p>\n            </div> */}\n\n            <div className=\"sub\">Total Payable</div>\n            <div className=\"sub-price\">\n              <p className=\"sub-price__val\">\n                {`${cartTotal.currencyFormat} ${formatPrice(\n                  cartTotal.totalPrice,\n                  cartTotal.currencyId\n                )}`}\n              </p>\n             \n            </div>\n            \n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  cartProducts: state.cart.products,\n  newProduct: state.cart.productToAdd,\n  productToRemove: state.cart.productToRemove,\n  productToChange: state.cart.productToChange,\n  cartTotal: state.total.data\n});\n\nexport default connect(\n  mapStateToProps,\n  { loadCart, updateCart, removeProduct, changeProductQuantity }\n)(FloatCart);\n","import { UPDATE_CART } from './actionTypes';\n\nexport const updateCart = cartProducts => dispatch => {\n  let productQuantity = cartProducts.reduce((sum, p) => {\n    sum += p.quantity;\n    return sum;\n  }, 0);\n\n  let totalPrice = cartProducts.reduce((sum, p) => {\n    sum += p.price * p.quantity;\n    return sum;\n  }, 0);\n\n  let installments = cartProducts.reduce((greater, p) => {\n    greater = p.installments > greater ? p.installments : greater;\n    return greater;\n  }, 0);\n\n  let cartTotal = {\n    productQuantity,\n    installments,\n    totalPrice,\n    currencyId: 'INR',\n    currencyFormat: '₹'\n  };\n\n  dispatch({\n    type: UPDATE_CART,\n    payload: cartTotal\n  });\n};\n","export const UPDATE_CART = 'UPDATE_CART';\n","import React from 'react';\n\nimport Shelf from '../Shelf';\nimport Filter from '../Shelf/Filter';\nimport FloatCart from '../FloatCart';\n\nconst App = () => (\n  <React.Fragment>\n    <main>\n      <Filter />\n      <Shelf />\n    </main>\n    <FloatCart />\n  </React.Fragment>\n);\n\nexport default App;\n","import { FETCH_PRODUCTS } from './actionTypes';\n\nconst initialState = {\n  products: []\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case FETCH_PRODUCTS:\n      return {\n        ...state,\n        products: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","import { LOAD_CART, ADD_PRODUCT, REMOVE_PRODUCT, CHANGE_PRODUCT_QUANTITY } from './actionTypes';\n\nconst initialState = {\n  products: []\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case LOAD_CART:\n      return {\n        ...state,\n        products: action.payload\n      };\n    case ADD_PRODUCT:\n      return {\n        ...state,\n        productToAdd: Object.assign({}, action.payload)\n      };\n    case REMOVE_PRODUCT:\n      return {\n        ...state,\n        productToRemove: Object.assign({}, action.payload)\n      };\n    case CHANGE_PRODUCT_QUANTITY:\n      return {\n        ...state,\n        productToChange: Object.assign({}, action.payload)\n      };\n    default:\n      return state;\n  }\n}\n","import { UPDATE_CART } from './actionTypes';\n\nconst initialState = {\n  data: {\n    productQuantity: 0,\n    installments: 0,\n    totalPrice: 0,\n    currencyId: 'INR',\n    currencyFormat: '₹'\n  }\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case UPDATE_CART:\n      return {\n        ...state,\n        data: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","import { UPDATE_FILTER } from './actionTypes';\n\nconst initialState = {\n  items: []\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case UPDATE_FILTER:\n      return {\n        ...state,\n        items: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","import { UPDATE_SORT } from './actionTypes';\n\nconst initialState = {\n  type: ''\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case UPDATE_SORT:\n      return {\n        ...state,\n        type: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","import { UPDATE_SEARCH } from './actionTypes';\n\nconst initialState = {\n  type: ''\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case UPDATE_SEARCH:\n      return {\n        ...state,\n        type: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport shelfReducer from './shelf/reducer';\nimport cartReducer from './cart/reducer';\nimport totalReducer from './total/reducer';\nimport filtersReducer from './filters/reducer';\nimport sortReducer from './sort/reducer';\nimport searchReducer from './search/reducer'\n\nexport default combineReducers({\n  shelf: shelfReducer,\n  cart: cartReducer,\n  total: totalReducer,\n  filters: filtersReducer,\n  sort: sortReducer,\n  search: searchReducer\n});\n","import { compose, createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nexport default initialState => {\n  initialState =\n    JSON.parse(window.localStorage.getItem('state')) || initialState;\n  const middleware = [thunk];\n\n  const store = createStore(\n    rootReducer,\n    initialState,\n    compose(\n      applyMiddleware(...middleware)\n    )\n  );\n\n  store.subscribe(() => {\n    const state = store.getState();\n    const persist = {\n      cart: state.cart,\n      total: state.total\n    };\n\n    window.localStorage.setItem('state', JSON.stringify(persist));\n  });\n\n  return store;\n};\n","import React from 'react';\nimport { Provider } from 'react-redux';\n\nimport store from './services/store';\n\nconst Root = ({ children, initialState = {} }) => (\n  <Provider store={store(initialState)}>{children}</Provider>\n);\n\nexport default Root;\n","import 'babel-polyfill'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\nimport Root from './Root';\n\nimport './index.scss';\n\nReactDOM.render(\n  <Root>\n    <App />\n  </Root>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}