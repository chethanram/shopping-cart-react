{"version":3,"sources":["services/shelf/actions.js","components/Spinner/index.js","components/Selectbox/index.js","components/Shelf/Sort/index.js","services/sort/actions.js","services/sort/actionTypes.js","components/Shelf/Search/index.js","services/search/actions.js","services/search/actionTypes.js","components/Shelf/ShelfHeader/index.js","components/Thumb/index.js","components/Shelf/ProductList/Product/index.js","services/cart/actions.js","services/cart/actionTypes.js","components/Shelf/ProductList/index.js","components/Shelf/index.js","services/util.js","services/shelf/actionTypes.js","components/Shelf/Filter/index.js","services/filters/actions.js","services/filters/actionTypes.js","components/FloatCart/CartProduct/index.js","components/FloatCart/index.js","services/total/actions.js","services/total/actionTypes.js","components/App/index.js","services/shelf/reducer.js","services/cart/reducer.js","services/total/reducer.js","services/filters/reducer.js","services/sort/reducer.js","services/search/reducer.js","services/reducers.js","services/store.js","Root.js","index.js"],"names":["compare","lowestprice","a","b","price","highestprice","Spinner","react_default","createElement","className","Selectbox","_ref","options","classes","handleOnChange","onChange","e","target","value","map","o","key","label","createOptions","onClick","type","createText","sortBy","connect","state","sort","updateSort","payload","components_Selectbox","search","updateSearch","ShelfHeader","props","Shelf_Sort","Shelf_Search","Thumb","src","alt","title","addProduct","product","quantity","components_Thumb","img_url","name","discount","ProductList","products","p","ProductList_Product","id","Shelf","isLoading","handleFetchProducts","filters","arguments","length","undefined","_this","setState","fetchProducts","this","nextProps","nextFilters","nextSort","nextSearch","Fragment","Shelf_ShelfHeader","productsLength","Shelf_ProductList","Component","shelf","items","callback","dispatch","axios","get","then","res","data","filter","Object","keys","some","toString","toLowerCase","includes","catch","err","console","log","Filter","inputValue","toggleCheckbox","changedPrice","updateFilters","selectedCheckboxes","Set","min","max","step","CartProduct","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleMouseOver","isMouseOver","handleMouseOut","handleOnIncrease","changeProductQuantity","handleOnDecrease","_this2","removeProduct","push","join","onMouseOver","onMouseOut","FloatCart","isOpen","openFloatCart","closeFloatCart","_this$props","cartProducts","updateCart","productAlreadyInCart","forEach","cp","_this$props2","index","findIndex","splice","changedProduct","_this$props3","find","newProduct","productToRemove","productToChange","_this$props4","cartTotal","FloatCart_CartProduct","productQuantity","concat","currencyFormat","x","currency","toFixed","replace","formatPrice","totalPrice","currencyId","cart","productToAdd","total","loadCart","reduce","sum","installments","greater","App","Shelf_Filter","components_Shelf","components_FloatCart","initialState","combineReducers","action","objectSpread","assign","services_store","JSON","parse","window","localStorage","getItem","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","subscribe","getState","persist","setItem","stringify","Root","children","_ref$initialState","es","ReactDOM","render","src_Root","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.f3768f54.chunk.js","sourcesContent":["import { FETCH_PRODUCTS } from './actionTypes';\nimport axios from 'axios';\n\nimport { productsAPI } from '../util';\n\nconst compare = {\n  lowestprice: (a, b) => {\n    if (a.price < b.price) return -1;\n    if (a.price > b.price) return 1;\n    return 0;\n  },\n  highestprice: (a, b) => {\n    if (a.price > b.price) return -1;\n    if (a.price < b.price) return 1;\n    return 0;\n  }\n};\n\nexport const fetchProducts = (filters, sortBy, search, callback) => dispatch => {\n  return axios\n    .get(productsAPI)\n    .then(res => {\n      var products  = res.data;\n\n      if (!!filters && filters.length > 0) {\n        products = products.filter(p => p.price <= filters  );\n      }\n\n      if (!!sortBy) {\n        products = products.sort(compare[sortBy]);\n      }\n\n      if(!!search){\n        products = products.filter(p => Object.keys(p).some(key => p[key].toString().toLowerCase().includes(search.toLowerCase())));\n      }\n\n      if (!!callback) {\n        callback();\n      }\n\n      return dispatch({\n        type: FETCH_PRODUCTS,\n        payload: products\n      });\n    })\n    .catch(err => {\n      console.log('Could not fetch products. Try again later.');\n    });\n};\n","import React from 'react';\n\nimport './style.scss';\n\nexport default () => (\n  <div className=\"spinner lds-ring\">\n    <div />\n    <div />\n    <div />\n    <div />\n  </div>\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Selectbox = ({ options, classes, handleOnChange }) => {\n  const createOptions = options =>\n    options.map(o => (\n      <option value={o.value} key={o.value}>\n        {o.label}\n      </option>\n    ));\n\n    const createText = options =>\n    options.map(o => (\n      <input onClick={e => handleOnChange(e.target.value)} type='button' value={o.value} className='sortLink'/>\n    ));\n\n  return (\n      <div>\n      <div className='onlySmallScreen'>\n    Sort by\n    <select  onChange={e => handleOnChange(e.target.value)} className={classes}>\n      {createOptions(options)}\n    </select>\n    </div>\n    <div className='onlyLargeScreen'>\n        Sort by \n        {createText(options)}\n    </div>\n    </div>\n  );\n};\n\nSelectbox.propTypes = {\n  options: PropTypes.array.isRequired,\n  classes: PropTypes.string,\n  handleOnChange: PropTypes.func.isRequired\n};\n\nexport default Selectbox;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { updateSort } from '../../../services/sort/actions';\nimport Selectbox from '../../Selectbox';\n\nconst sortBy = [\n  { value: '', label: 'Select' },\n  { value: 'lowestprice', label: 'Lowest to highest' },\n  { value: 'highestprice', label: 'Highest to lowest' }\n];\n\nconst Sort = ({ updateSort, sort }) => (\n  <div className=\"sort\">\n    <Selectbox options={sortBy} handleOnChange={value => updateSort(value)} />\n  </div>\n);\n\nSort.propTypes = {\n  updateSort: PropTypes.func.isRequired,\n  sort: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = state => ({\n  sort: state.sort.type\n});\n\nexport default connect(\n  mapStateToProps,\n  { updateSort }\n)(Sort);\n","import { UPDATE_SORT } from './actionTypes';\n\nexport const updateSort = sort => ({\n  type: UPDATE_SORT,\n  payload: sort\n});\n","export const UPDATE_SORT = 'UPDATE_SORT';\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { updateSearch } from '../../../services/search/actions';\n\n\nconst Search = ({ updateSearch, search }) => (\n  <div className=\"search\">\n    Search\n    <input type='text' onChange={e => updateSearch(e.target.value)}/>\n  </div>\n);\n\nSearch.propTypes = {\n  updateSearch: PropTypes.func.isRequired,\n  search: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = state => ({\n  search: state.search.type\n});\n\nexport default connect(\n  mapStateToProps,\n  { updateSearch }\n)(Search);\n","import { UPDATE_SEARCH } from './actionTypes';\n\nexport const updateSearch = search => ({\n  type: UPDATE_SEARCH,\n  payload: search\n});\n","export const UPDATE_SEARCH = 'UPDATE_SEARCH';\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Sort from '../Sort';\nimport Search from '../Search';\n\nconst ShelfHeader = props => {\n  return (\n    <div className=\"shelf-container-header\">\n      <Sort />\n      <Search />\n    </div>\n  );\n};\n\nShelfHeader.propTypes = {\n  productsLength: PropTypes.number.isRequired\n};\n\nexport default ShelfHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Thumb = props => (\n  <div className={props.classes}>\n    <img src={props.src} alt={props.alt} title={props.title} />\n  </div>\n);\n\nThumb.propTypes = {\n  alt: PropTypes.string,\n  title: PropTypes.string,\n  classes: PropTypes.string,\n  src: PropTypes.string.isRequired\n};\n\nexport default Thumb;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport Thumb from '../../../Thumb';\nimport { addProduct } from '../../../../services/cart/actions';\n\nconst Product = ({ product, addProduct }) => {\n  product.quantity = 1;\n\n\n\n  return (\n    <div\n      className=\"shelf-item\"\n      onClick={() => addProduct(product)}\n    >\n    \n      <Thumb\n        classes=\"shelf-item__thumb\"\n        src={product.img_url}\n        alt={product.name}\n      />\n      <p className=\"shelf-item__title\">{product.name}</p>\n      <div className=\"shelf-item__price\">\n        {product.price} <del>{product.price*(product.discount/100) + product.price} </del>\n        <span className='shelf-item__success'>{product.discount}% off </span>\n      </div>\n      <div className=\"shelf-item__buy-btn\">Add to cart</div>\n    </div>\n  );\n};\n\nProduct.propTypes = {\n  product: PropTypes.object.isRequired,\n  addProduct: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { addProduct }\n)(Product);\n","import { LOAD_CART, ADD_PRODUCT, REMOVE_PRODUCT, CHANGE_PRODUCT_QUANTITY } from './actionTypes';\n\nexport const loadCart = products => ({\n  type: LOAD_CART,\n  payload: products\n});\n\nexport const addProduct = product => ({\n  type: ADD_PRODUCT,\n  payload: product\n});\n\nexport const removeProduct = product => ({\n  type: REMOVE_PRODUCT,\n  payload: product\n});\n\nexport const changeProductQuantity = product => ({\n  type: CHANGE_PRODUCT_QUANTITY,\n  payload: product\n});","export const LOAD_CART = 'LOAD_CART';\nexport const ADD_PRODUCT = 'ADD_PRODUCT';\nexport const REMOVE_PRODUCT = 'REMOVE_PRODUCT';\nexport const CHANGE_PRODUCT_QUANTITY = 'CHANGE_PRODUCT_QUANTITY';\nexport const UPDATE_CART = 'UPDATE_CART';\n","import React from 'react';\n\nimport Product from './Product';\n\nconst ProductList = ({ products }) => {\n  return products.map(p => {\n    return <Product product={p} key={p.id} />;\n  });\n};\n\nexport default ProductList;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { fetchProducts } from '../../services/shelf/actions';\n\nimport Spinner from '../Spinner';\nimport ShelfHeader from './ShelfHeader';\nimport ProductList from './ProductList';\n\nimport './style.scss';\n\nclass Shelf extends Component {\n  static propTypes = {\n    fetchProducts: PropTypes.func.isRequired,\n    products: PropTypes.array.isRequired,\n    filters: PropTypes.number,\n    sort: PropTypes.string,\n    search: PropTypes.string\n  };\n\n  state = {\n    isLoading: false\n  };\n\n  componentDidMount() {\n    this.handleFetchProducts();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { filters: nextFilters, sort: nextSort , search: nextSearch} = nextProps;\n    const { filters } = this.props;\n    if (nextFilters.length !== filters.length) {\n      this.handleFetchProducts(nextFilters, undefined, undefined);\n    }\n\n    if (nextSort !== this.props.sort) {\n      this.handleFetchProducts(undefined, nextSort, undefined);\n    }\n\n    if(nextSearch !== this.props.search){\n        this.handleFetchProducts(undefined,undefined, nextSearch);\n    }\n  }\n\n  handleFetchProducts = (\n    filters = this.props.filters,\n    sort = this.props.sort,\n    search = this.props.search\n  ) => {\n    this.setState({ isLoading: true });\n    this.props.fetchProducts(filters, sort, search, () => {\n      this.setState({ isLoading: false });\n    });\n  };\n\n  render() {\n    const { products } = this.props;\n    const { isLoading } = this.state;\n\n    return (\n      <React.Fragment>\n        {isLoading && <Spinner />}\n        <div className=\"shelf-container\">\n          <ShelfHeader productsLength={products.length} />\n          <ProductList products={products} />\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  products: state.shelf.products,\n  filters: state.filters.items,\n  sort: state.sort.type,\n  search: state.search.type\n});\n\nexport default connect(\n  mapStateToProps,\n  { fetchProducts }\n)(Shelf);\n","export const formatPrice = (x, currency) => {\n  switch (currency) {\n    case 'INR':\n      return x.toFixed(2).replace('.', ',');\n    default:\n      return x.toFixed(2);\n  }\n};\n\nexport const productsAPI =\n  'https://api.myjson.com/bins/qzuzi';\n","export const FETCH_PRODUCTS = 'FETCH_PRODUCTS';\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { updateFilters } from '../../../services/filters/actions';\n\nimport './style.scss';\n\nclass Filter extends Component {\n  static propTypes = {\n    updateFilters: PropTypes.func.isRequired,\n    filters: PropTypes.number\n  };\n  state = {\n    inputValue: 0\n  }\n\n  componentDidMount() {\n    this.selectedCheckboxes = new Set();\n  }\n\n  toggleCheckbox = () => {\n        var changedPrice = this.state.inputValue;\n\n    this.props.updateFilters(changedPrice);\n  };\n\n  inputValue = e => this.setState({inputValue:e.target.value});\n\n  render() {\n    return (\n      <div className=\"filters\">\n        <h4 className=\"title\">Filters: &lt; {this.state.inputValue}</h4>\n         <div>\n            <span >100</span>\n            <input className='filterRange' type=\"range\" min=\"100\" max=\"700\" onChange={this.inputValue} step=\"100\"/>\n            <span>700</span>\n            <div className='filterPriceTag'> Price </div> \n            <p className='applyBtnCont'><input type=\"submit\" className='applyBtn' value=\"submit\" onClick={this.toggleCheckbox} /></p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { updateFilters }\n)(Filter);\n","import { UPDATE_FILTER } from './actionTypes';\n\nexport const updateFilters = filters => ({\n  type: UPDATE_FILTER,\n  payload: filters\n});\n","export const UPDATE_FILTER = 'UPDATE_FILTER';\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Thumb from './../../Thumb';\n\nclass CartProduct extends Component {\n  static propTypes = {\n    product: PropTypes.object.isRequired,\n    removeProduct: PropTypes.func.isRequired,\n    changeProductQuantity: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      product: this.props.product,\n      isMouseOver: false\n    };\n  }\n\n  handleMouseOver = () => {\n    this.setState({ isMouseOver: true });\n  };\n\n  handleMouseOut = () => {\n    this.setState({ isMouseOver: false });\n  };\n\n  handleOnIncrease = () => {\n    const { changeProductQuantity } = this.props;\n    const { product } = this.state;\n    product.quantity = product.quantity + 1;\n    changeProductQuantity(product);\n  }\n\n  handleOnDecrease = () => {\n    const { changeProductQuantity } = this.props;\n    const { product } = this.state;\n    product.quantity = product.quantity - 1;\n    changeProductQuantity(product);\n  }\n\n  render() {\n    const { removeProduct } = this.props;\n    const { product } = this.state;\n\n    const classes = ['shelf-item'];\n\n    if (!!this.state.isMouseOver) {\n      classes.push('shelf-item--mouseover');\n    }\n\n    return (\n      <div className={classes.join(' ')}>\n        <div\n          className=\"shelf-item__del\"\n          onMouseOver={() => this.handleMouseOver()}\n          onMouseOut={() => this.handleMouseOut()}\n          onClick={() => removeProduct(product)}\n        > REMOVE </div>\n        <Thumb\n          classes=\"shelf-item__thumb\"\n          src={product.img_url}\n          alt={product.name}\n        />\n        <div className=\"shelf-item__details\">\n          <p className=\"title\">{product.name}</p>\n          <p className=\"desc\">\n            {product.price} <del>{product.price*(product.discount/100) + product.price} </del>\n            <span className='shelf-item__success'>{product.discount}% off </span>\n          </p>\n        </div>\n        <div className=\"shelf-item__price\">\n          \n          <div>\n            <button onClick={this.handleOnDecrease}  className=\"change-product-button\">-</button>\n            <label> {product.quantity} </label>\n            <button onClick={this.handleOnIncrease} className=\"change-product-button\">+</button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CartProduct;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { loadCart, removeProduct, changeProductQuantity } from '../../services/cart/actions';\nimport { updateCart } from '../../services/total/actions';\nimport CartProduct from './CartProduct';\nimport { formatPrice } from '../../services/util';\n\nimport './style.scss';\n\nclass FloatCart extends Component {\n  static propTypes = {\n    loadCart: PropTypes.func.isRequired,\n    updateCart: PropTypes.func.isRequired,\n    cartProducts: PropTypes.array.isRequired,\n    newProduct: PropTypes.object,\n    removeProduct: PropTypes.func,\n    productToRemove: PropTypes.object,\n    changeProductQuantity: PropTypes.func,\n    productToChange: PropTypes.object,\n  };\n\n  state = {\n    isOpen: false\n  };\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.newProduct !== this.props.newProduct) {\n      this.addProduct(nextProps.newProduct);\n    }\n\n    if (nextProps.productToRemove !== this.props.productToRemove) {\n      this.removeProduct(nextProps.productToRemove);\n    }\n\n    if (nextProps.productToChange !== this.props.productToChange) {\n      this.changeProductQuantity(nextProps.productToChange);\n    }\n  }\n\n  openFloatCart = () => {\n    this.setState({ isOpen: true });\n  };\n\n  closeFloatCart = () => {\n    this.setState({ isOpen: false });\n  };\n\n  addProduct = product => {\n    const { cartProducts, updateCart } = this.props;\n    let productAlreadyInCart = false;\n\n    cartProducts.forEach(cp => {\n      if (cp.id === product.id) {\n        cp.quantity += product.quantity;\n        productAlreadyInCart = true;\n      }\n    });\n\n    if (!productAlreadyInCart) {\n      cartProducts.push(product);\n    }\n\n    updateCart(cartProducts);\n  };\n\n  removeProduct = product => {\n    const { cartProducts, updateCart } = this.props;\n\n    const index = cartProducts.findIndex(p => p.id === product.id);\n    if (index >= 0) {\n      cartProducts.splice(index, 1);\n      updateCart(cartProducts);\n    }\n  };\n\n  changeProductQuantity = changedProduct => {\n    const { cartProducts, updateCart } = this.props;\n\n    const product = cartProducts.find(p => p.id === changedProduct.id);\n    product.quantity = changedProduct.quantity;\n    if (product.quantity <= 0) {\n      this.removeProduct(product);\n    }\n    updateCart(cartProducts);\n  }\n\n  render() {\n    const { cartTotal, cartProducts, removeProduct, changeProductQuantity } = this.props;\n\n    const products = cartProducts.map(p => {\n      return (\n        <CartProduct product={p} removeProduct={removeProduct} changeProductQuantity={changeProductQuantity} key={p.id} />\n      );\n    });\n\n    let classes = ['float-cart'];\n\n    if (!!this.state.isOpen) {\n      classes.push('float-cart--open');\n    }\n\n    return (\n      <div className={classes.join(' ')}>\n        {/* If cart open, home button */}\n        {this.state.isOpen && (\n          <div\n            onClick={() => this.closeFloatCart()}\n            className=\"float-cart__close-btn\"\n          >\n            Home\n          </div>\n        )}\n\n        {/* If cart is closed, show bag with quantity of product and open cart action */}\n        {!this.state.isOpen && (\n          <span\n            onClick={() => this.openFloatCart()}\n            className=\"bag bag--float-cart-closed\"\n          >\n            <span className=\"bag__quantity\">{cartTotal.productQuantity}</span>\n          </span>\n        )}\n\n        <div className=\"float-cart__content\">\n          <div className=\"float-cart__header\">\n            <span className=\"bag\">\n              <span className=\"bag__quantity\">{cartTotal.productQuantity}</span>\n            </span>\n            <span className=\"header-title\">Cart</span>\n          </div>\n\n          <div className=\"float-cart__shelf-container\">\n            {products}\n            {!products.length && (\n              <p className=\"shelf-empty\">\n                Add some products in the cart <br />\n                :)\n              </p>\n            )}\n          </div>\n\n          <div className=\"float-cart__footer\">\n            <h3>PRICE DETAILS</h3>\n            {/* <div className=\"sub\">Price (1 item)</div>\n             <div className=\"sub-price\">\n              <p className=\"sub-price__val\">\n                {products.price*(products.discount/100) + products.price}\n              </p>\n            </div>\n                <div className=\"sub\">Discount</div>\n             <div className=\"sub-price\">\n              <p className=\"sub-price__val\">\n                 {products.discount}\n              </p>\n            </div> */}\n\n            <div className=\"sub\">Total Payable</div>\n            <div className=\"sub-price\">\n              <p className=\"sub-price__val\">\n                {`${cartTotal.currencyFormat} ${formatPrice(\n                  cartTotal.totalPrice,\n                  cartTotal.currencyId\n                )}`}\n              </p>\n             \n            </div>\n            \n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  cartProducts: state.cart.products,\n  newProduct: state.cart.productToAdd,\n  productToRemove: state.cart.productToRemove,\n  productToChange: state.cart.productToChange,\n  cartTotal: state.total.data\n});\n\nexport default connect(\n  mapStateToProps,\n  { loadCart, updateCart, removeProduct, changeProductQuantity }\n)(FloatCart);\n","import { UPDATE_CART } from './actionTypes';\n\nexport const updateCart = cartProducts => dispatch => {\n  let productQuantity = cartProducts.reduce((sum, p) => {\n    sum += p.quantity;\n    return sum;\n  }, 0);\n\n  let totalPrice = cartProducts.reduce((sum, p) => {\n    sum += p.price * p.quantity;\n    return sum;\n  }, 0);\n\n  let installments = cartProducts.reduce((greater, p) => {\n    greater = p.installments > greater ? p.installments : greater;\n    return greater;\n  }, 0);\n\n  let cartTotal = {\n    productQuantity,\n    installments,\n    totalPrice,\n    currencyId: 'INR',\n    currencyFormat: '₹'\n  };\n\n  dispatch({\n    type: UPDATE_CART,\n    payload: cartTotal\n  });\n};\n","export const UPDATE_CART = 'UPDATE_CART';\n","import React from 'react';\n\nimport Shelf from '../Shelf';\nimport Filter from '../Shelf/Filter';\nimport FloatCart from '../FloatCart';\n\nconst App = () => (\n  <React.Fragment>\n    <main>\n      <header />\n      <Filter />\n      <Shelf />\n    </main>\n    <FloatCart />\n  </React.Fragment>\n);\n\nexport default App;\n","import { FETCH_PRODUCTS } from './actionTypes';\n\nconst initialState = {\n  products: []\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case FETCH_PRODUCTS:\n      return {\n        ...state,\n        products: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","import { LOAD_CART, ADD_PRODUCT, REMOVE_PRODUCT, CHANGE_PRODUCT_QUANTITY } from './actionTypes';\n\nconst initialState = {\n  products: []\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case LOAD_CART:\n      return {\n        ...state,\n        products: action.payload\n      };\n    case ADD_PRODUCT:\n      return {\n        ...state,\n        productToAdd: Object.assign({}, action.payload)\n      };\n    case REMOVE_PRODUCT:\n      return {\n        ...state,\n        productToRemove: Object.assign({}, action.payload)\n      };\n    case CHANGE_PRODUCT_QUANTITY:\n      return {\n        ...state,\n        productToChange: Object.assign({}, action.payload)\n      };\n    default:\n      return state;\n  }\n}\n","import { UPDATE_CART } from './actionTypes';\n\nconst initialState = {\n  data: {\n    productQuantity: 0,\n    installments: 0,\n    totalPrice: 0,\n    currencyId: 'INR',\n    currencyFormat: '₹'\n  }\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case UPDATE_CART:\n      return {\n        ...state,\n        data: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","import { UPDATE_FILTER } from './actionTypes';\n\nconst initialState = {\n  items: []\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case UPDATE_FILTER:\n      return {\n        ...state,\n        items: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","import { UPDATE_SORT } from './actionTypes';\n\nconst initialState = {\n  type: ''\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case UPDATE_SORT:\n      return {\n        ...state,\n        type: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","import { UPDATE_SEARCH } from './actionTypes';\n\nconst initialState = {\n  type: ''\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case UPDATE_SEARCH:\n      return {\n        ...state,\n        type: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport shelfReducer from './shelf/reducer';\nimport cartReducer from './cart/reducer';\nimport totalReducer from './total/reducer';\nimport filtersReducer from './filters/reducer';\nimport sortReducer from './sort/reducer';\nimport searchReducer from './search/reducer'\n\nexport default combineReducers({\n  shelf: shelfReducer,\n  cart: cartReducer,\n  total: totalReducer,\n  filters: filtersReducer,\n  sort: sortReducer,\n  search: searchReducer\n});\n","import { compose, createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nexport default initialState => {\n  initialState =\n    JSON.parse(window.localStorage.getItem('state')) || initialState;\n  const middleware = [thunk];\n\n  const store = createStore(\n    rootReducer,\n    initialState,\n    compose(\n      applyMiddleware(...middleware)\n    )\n  );\n\n  store.subscribe(() => {\n    const state = store.getState();\n    const persist = {\n      cart: state.cart,\n      total: state.total\n    };\n\n    window.localStorage.setItem('state', JSON.stringify(persist));\n  });\n\n  return store;\n};\n","import React from 'react';\nimport { Provider } from 'react-redux';\n\nimport store from './services/store';\n\nconst Root = ({ children, initialState = {} }) => (\n  <Provider store={store(initialState)}>{children}</Provider>\n);\n\nexport default Root;\n","import 'babel-polyfill'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\nimport Root from './Root';\n\nimport './index.scss';\n\nReactDOM.render(\n  <Root>\n    <App />\n  </Root>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}