{"version":3,"sources":["services/util.js","services/shelf/actions.js","components/Spinner/index.js","components/Selectbox/index.js","components/Shelf/Sort/index.js","services/sort/actions.js","services/sort/actionTypes.js","components/Shelf/ShelfHeader/index.js","components/Thumb/index.js","components/Shelf/ProductList/Product/index.js","services/cart/actions.js","services/cart/actionTypes.js","components/Shelf/ProductList/index.js","components/Shelf/index.js","services/shelf/actionTypes.js","components/Shelf/Filter/index.js","components/Checkbox/index.js","services/filters/actions.js","services/filters/actionTypes.js","components/FloatCart/CartProduct/index.js","components/FloatCart/index.js","services/total/actions.js","services/total/actionTypes.js","components/App/index.js","services/shelf/reducer.js","services/cart/reducer.js","services/total/reducer.js","services/filters/reducer.js","services/sort/reducer.js","services/reducers.js","services/store.js","Root.js","index.js"],"names":["formatPrice","x","currency","toFixed","replace","compare","lowestprice","a","b","price","highestprice","Spinner","react_default","createElement","className","Selectbox","_ref","options","classes","handleOnChange","onChange","e","target","value","map","o","key","label","createOptions","sortBy","connect","state","sort","type","updateSort","payload","components_Selectbox","ShelfHeader","props","productsLength","Shelf_Sort","Thumb","src","alt","title","addProduct","product","quantity","onClick","data-sku","sku","isFreeShipping","components_Thumb","img_url","name","discount","ProductList","products","p","ProductList_Product","id","Shelf","isLoading","handleFetchProducts","filters","arguments","length","undefined","_this","setState","fetchProducts","this","nextProps","nextFilters","nextSort","Fragment","Shelf_ShelfHeader","Shelf_ProductList","Component","shelf","items","callback","dispatch","axios","get","then","res","data","filter","catch","err","console","log","Filter","inputValue","toggleCheckbox","changedPrice","updateFilters","selectedCheckboxes","Set","min","max","step","CartProduct","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleMouseOver","isMouseOver","handleMouseOut","handleOnIncrease","changeProductQuantity","handleOnDecrease","_this2","removeProduct","push","join","onMouseOver","onMouseOut","concat","currencyFormat","disabled","FloatCart","isOpen","openFloatCart","closeFloatCart","_this$props","cartProducts","updateCart","productAlreadyInCart","forEach","cp","_this$props2","index","findIndex","splice","proceedToCheckout","_this$props$cartTotal","cartTotal","totalPrice","productQuantity","currencyId","alert","changedProduct","_this$props3","find","newProduct","productToRemove","productToChange","_this$props4","FloatCart_CartProduct","installments","cart","productToAdd","total","loadCart","reduce","sum","greater","App","Shelf_Filter","components_Shelf","components_FloatCart","initialState","combineReducers","action","objectSpread","assign","services_store","JSON","parse","window","localStorage","getItem","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","subscribe","getState","persist","setItem","stringify","Root","children","_ref$initialState","es","ReactDOM","render","src_Root","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.daab6bcb.chunk.js","sourcesContent":["export const formatPrice = (x, currency) => {\n  switch (currency) {\n    case 'INR':\n      return x.toFixed(2).replace('.', ',');\n    default:\n      return x.toFixed(2);\n  }\n};\n\nexport const productsAPI =\n  'https://api.myjson.com/bins/qzuzi';\n","import { FETCH_PRODUCTS } from './actionTypes';\nimport axios from 'axios';\n\nimport { productsAPI } from '../util';\n\nconst compare = {\n  lowestprice: (a, b) => {\n    if (a.price < b.price) return -1;\n    if (a.price > b.price) return 1;\n    return 0;\n  },\n  highestprice: (a, b) => {\n    if (a.price > b.price) return -1;\n    if (a.price < b.price) return 1;\n    return 0;\n  }\n};\n\nexport const fetchProducts = (filters, sortBy, callback) => dispatch => {\n  return axios\n    .get(productsAPI)\n    .then(res => {\n      var products  = res.data;\n\n      if (!!filters && filters.length > 0) {\n        products = products.filter(p => p.price <= filters  );\n      }\n\n      if (!!sortBy) {\n        products = products.sort(compare[sortBy]);\n      }\n\n      if (!!callback) {\n        callback();\n      }\n\n      return dispatch({\n        type: FETCH_PRODUCTS,\n        payload: products\n      });\n    })\n    .catch(err => {\n      console.log('Could not fetch products. Try again later.');\n    });\n};\n","import React from 'react';\n\nimport './style.scss';\n\nexport default () => (\n  <div className=\"spinner lds-ring\">\n    <div />\n    <div />\n    <div />\n    <div />\n  </div>\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Selectbox = ({ options, classes, handleOnChange }) => {\n  const createOptions = options =>\n    options.map(o => (\n      <option value={o.value} key={o.value}>\n        {o.label}\n      </option>\n    ));\n\n  return (\n    <select onChange={e => handleOnChange(e.target.value)} className={classes}>\n      {createOptions(options)}\n    </select>\n  );\n};\n\nSelectbox.propTypes = {\n  options: PropTypes.array.isRequired,\n  classes: PropTypes.string,\n  handleOnChange: PropTypes.func.isRequired\n};\n\nexport default Selectbox;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { updateSort } from '../../../services/sort/actions';\nimport Selectbox from '../../Selectbox';\n\nconst sortBy = [\n  { value: '', label: 'Select' },\n  { value: 'lowestprice', label: 'Lowest to highest' },\n  { value: 'highestprice', label: 'Highest to lowest' }\n];\n\nconst Sort = ({ updateSort, sort }) => (\n  <div className=\"sort\">\n    Order by\n    <Selectbox options={sortBy} handleOnChange={value => updateSort(value)} />\n  </div>\n);\n\nSort.propTypes = {\n  updateSort: PropTypes.func.isRequired,\n  sort: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = state => ({\n  sort: state.sort.type\n});\n\nexport default connect(\n  mapStateToProps,\n  { updateSort }\n)(Sort);\n","import { UPDATE_SORT } from './actionTypes';\n\nexport const updateSort = sort => ({\n  type: UPDATE_SORT,\n  payload: sort\n});\n","export const UPDATE_SORT = 'UPDATE_SORT';\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Sort from '../Sort';\n\nconst ShelfHeader = props => {\n  return (\n    <div className=\"shelf-container-header\">\n      <small className=\"products-found\">\n        <span>{props.productsLength} Product(s) found.</span>\n      </small>\n      <Sort />\n    </div>\n  );\n};\n\nShelfHeader.propTypes = {\n  productsLength: PropTypes.number.isRequired\n};\n\nexport default ShelfHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Thumb = props => (\n  <div className={props.classes}>\n    <img src={props.src} alt={props.alt} title={props.title} />\n  </div>\n);\n\nThumb.propTypes = {\n  alt: PropTypes.string,\n  title: PropTypes.string,\n  classes: PropTypes.string,\n  src: PropTypes.string.isRequired\n};\n\nexport default Thumb;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport Thumb from '../../../Thumb';\nimport { addProduct } from '../../../../services/cart/actions';\n\nconst Product = ({ product, addProduct }) => {\n  product.quantity = 1;\n\n\n\n  return (\n    <div\n      className=\"shelf-item\"\n      onClick={() => addProduct(product)}\n      data-sku={product.sku}\n    >\n      {product.isFreeShipping && (\n        <div className=\"shelf-stopper\">Free shipping</div>\n      )}\n      <Thumb\n        classes=\"shelf-item__thumb\"\n        src={product.img_url}\n        alt={product.name}\n      />\n      <p className=\"shelf-item__title\">{product.name}</p>\n      <div className=\"shelf-item__price\">\n        {product.price} <del>{product.price*(product.discount/100) + product.price} </del>\n        <span className='shelf-item__success'>{product.discount}% off </span>\n      </div>\n      <div className=\"shelf-item__buy-btn\">Add to cart</div>\n    </div>\n  );\n};\n\nProduct.propTypes = {\n  product: PropTypes.object.isRequired,\n  addProduct: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { addProduct }\n)(Product);\n","import { LOAD_CART, ADD_PRODUCT, REMOVE_PRODUCT, CHANGE_PRODUCT_QUANTITY } from './actionTypes';\n\nexport const loadCart = products => ({\n  type: LOAD_CART,\n  payload: products\n});\n\nexport const addProduct = product => ({\n  type: ADD_PRODUCT,\n  payload: product\n});\n\nexport const removeProduct = product => ({\n  type: REMOVE_PRODUCT,\n  payload: product\n});\n\nexport const changeProductQuantity = product => ({\n  type: CHANGE_PRODUCT_QUANTITY,\n  payload: product\n});","export const LOAD_CART = 'LOAD_CART';\nexport const ADD_PRODUCT = 'ADD_PRODUCT';\nexport const REMOVE_PRODUCT = 'REMOVE_PRODUCT';\nexport const CHANGE_PRODUCT_QUANTITY = 'CHANGE_PRODUCT_QUANTITY';\nexport const UPDATE_CART = 'UPDATE_CART';\n","import React from 'react';\n\nimport Product from './Product';\n\nconst ProductList = ({ products }) => {\n  return products.map(p => {\n    return <Product product={p} key={p.id} />;\n  });\n};\n\nexport default ProductList;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { fetchProducts } from '../../services/shelf/actions';\n\nimport Spinner from '../Spinner';\nimport ShelfHeader from './ShelfHeader';\nimport ProductList from './ProductList';\n\nimport './style.scss';\n\nclass Shelf extends Component {\n  static propTypes = {\n    fetchProducts: PropTypes.func.isRequired,\n    products: PropTypes.array.isRequired,\n    filters: PropTypes.number,\n    sort: PropTypes.string\n  };\n\n  state = {\n    isLoading: false\n  };\n\n  componentDidMount() {\n    this.handleFetchProducts();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { filters: nextFilters, sort: nextSort } = nextProps;\n    const { filters } = this.props;\n    if (nextFilters.length !== filters.length) {\n      this.handleFetchProducts(nextFilters, undefined);\n    }\n\n    if (nextSort !== this.props.sort) {\n      this.handleFetchProducts(undefined, nextSort);\n    }\n  }\n\n  handleFetchProducts = (\n    filters = this.props.filters,\n    sort = this.props.sort\n  ) => {\n    this.setState({ isLoading: true });\n    this.props.fetchProducts(filters, sort, () => {\n      this.setState({ isLoading: false });\n    });\n  };\n\n  render() {\n    const { products } = this.props;\n    const { isLoading } = this.state;\n\n    return (\n      <React.Fragment>\n        {isLoading && <Spinner />}\n        <div className=\"shelf-container\">\n          <ShelfHeader productsLength={products.length} />\n          <ProductList products={products} />\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  products: state.shelf.products,\n  filters: state.filters.items,\n  sort: state.sort.type\n});\n\nexport default connect(\n  mapStateToProps,\n  { fetchProducts }\n)(Shelf);\n","export const FETCH_PRODUCTS = 'FETCH_PRODUCTS';\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { updateFilters } from '../../../services/filters/actions';\nimport Checkbox from '../../Checkbox';\n\nimport './style.scss';\n\nclass Filter extends Component {\n  static propTypes = {\n    updateFilters: PropTypes.func.isRequired,\n    filters: PropTypes.number\n  };\n  state = {\n    inputValue: 0\n  }\n\n  componentDidMount() {\n    this.selectedCheckboxes = new Set();\n  }\n\n  toggleCheckbox = () => {\n        var changedPrice = this.state.inputValue;\n\n    this.props.updateFilters(changedPrice);\n  };\n\n  inputValue = e => this.setState({inputValue:e.target.value});\n\n  render() {\n    return (\n      <div className=\"filters\">\n        <h4 className=\"title\">Filters: &lt; {this.state.inputValue}</h4>\n         <div>\n            <span >100</span>\n            <input  type=\"range\" min=\"100\" max=\"700\" onChange={this.inputValue} step=\"100\"/>\n            <span>700</span>\n            <p><input type=\"submit\" value=\"submit\" onClick={this.toggleCheckbox} /></p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { updateFilters }\n)(Filter);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Checkbox extends Component {\n  static propTypes = {\n    label: PropTypes.string.isRequired,\n    handleCheckboxChange: PropTypes.func.isRequired\n  };\n\n  state = {\n    isChecked: false\n  };\n\n  toggleCheckboxChange = () => {\n    const { handleCheckboxChange, label } = this.props;\n\n    this.setState(({ isChecked }) => ({\n      isChecked: !isChecked\n    }));\n\n    handleCheckboxChange(label);\n  };\n\n  render() {\n    const { label, classes } = this.props;\n    const { isChecked } = this.state;\n\n    return (\n      <div className={classes}>\n        <label>\n          <input\n            type=\"checkbox\"\n            value={label}\n            checked={isChecked}\n            onChange={this.toggleCheckboxChange}\n          />\n\n          <span className=\"checkmark\">{label}</span>\n        </label>\n      </div>\n    );\n  }\n}\n\nexport default Checkbox;\n","import { UPDATE_FILTER } from './actionTypes';\n\nexport const updateFilters = filters => ({\n  type: UPDATE_FILTER,\n  payload: filters\n});\n","export const UPDATE_FILTER = 'UPDATE_FILTER';\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Thumb from './../../Thumb';\nimport { formatPrice } from '../../../services/util';\n\nclass CartProduct extends Component {\n  static propTypes = {\n    product: PropTypes.object.isRequired,\n    removeProduct: PropTypes.func.isRequired,\n    changeProductQuantity: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      product: this.props.product,\n      isMouseOver: false\n    };\n  }\n\n  handleMouseOver = () => {\n    this.setState({ isMouseOver: true });\n  };\n\n  handleMouseOut = () => {\n    this.setState({ isMouseOver: false });\n  };\n\n  handleOnIncrease = () => {\n    const { changeProductQuantity } = this.props;\n    const { product } = this.state;\n    product.quantity = product.quantity + 1;\n    changeProductQuantity(product);\n  }\n\n  handleOnDecrease = () => {\n    const { changeProductQuantity } = this.props;\n    const { product } = this.state;\n    product.quantity = product.quantity - 1;\n    changeProductQuantity(product);\n  }\n\n  render() {\n    const { removeProduct } = this.props;\n    const { product } = this.state;\n\n    const classes = ['shelf-item'];\n\n    if (!!this.state.isMouseOver) {\n      classes.push('shelf-item--mouseover');\n    }\n\n    return (\n      <div className={classes.join(' ')}>\n        <div\n          className=\"shelf-item__del\"\n          onMouseOver={() => this.handleMouseOver()}\n          onMouseOut={() => this.handleMouseOut()}\n          onClick={() => removeProduct(product)}\n        />\n        <Thumb\n          classes=\"shelf-item__thumb\"\n          src={product.img_url}\n          alt={product.title}\n        />\n        <div className=\"shelf-item__details\">\n          <p className=\"title\">{product.name}</p>\n          <p className=\"desc\">\n            {`${product.price} | ${product.discount}`} <br />\n            Quantity: {product.discount}\n          </p>\n        </div>\n        <div className=\"shelf-item__price\">\n          <p>{`${product.currencyFormat}  ${formatPrice(product.price)}`}</p>\n          <div>\n            <button onClick={this.handleOnDecrease} disabled={product.quantity === 1 ? true : false} className=\"change-product-button\">-</button>\n            <button onClick={this.handleOnIncrease} className=\"change-product-button\">+</button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CartProduct;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { loadCart, removeProduct, changeProductQuantity } from '../../services/cart/actions';\nimport { updateCart } from '../../services/total/actions';\nimport CartProduct from './CartProduct';\nimport { formatPrice } from '../../services/util';\n\nimport './style.scss';\n\nclass FloatCart extends Component {\n  static propTypes = {\n    loadCart: PropTypes.func.isRequired,\n    updateCart: PropTypes.func.isRequired,\n    cartProducts: PropTypes.array.isRequired,\n    newProduct: PropTypes.object,\n    removeProduct: PropTypes.func,\n    productToRemove: PropTypes.object,\n    changeProductQuantity: PropTypes.func,\n    productToChange: PropTypes.object,\n  };\n\n  state = {\n    isOpen: false\n  };\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.newProduct !== this.props.newProduct) {\n      this.addProduct(nextProps.newProduct);\n    }\n\n    if (nextProps.productToRemove !== this.props.productToRemove) {\n      this.removeProduct(nextProps.productToRemove);\n    }\n\n    if (nextProps.productToChange !== this.props.productToChange) {\n      this.changeProductQuantity(nextProps.productToChange);\n    }\n  }\n\n  openFloatCart = () => {\n    this.setState({ isOpen: true });\n  };\n\n  closeFloatCart = () => {\n    this.setState({ isOpen: false });\n  };\n\n  addProduct = product => {\n    const { cartProducts, updateCart } = this.props;\n    let productAlreadyInCart = false;\n\n    cartProducts.forEach(cp => {\n      if (cp.id === product.id) {\n        cp.quantity += product.quantity;\n        productAlreadyInCart = true;\n      }\n    });\n\n    if (!productAlreadyInCart) {\n      cartProducts.push(product);\n    }\n\n    updateCart(cartProducts);\n    this.openFloatCart();\n  };\n\n  removeProduct = product => {\n    const { cartProducts, updateCart } = this.props;\n\n    const index = cartProducts.findIndex(p => p.id === product.id);\n    if (index >= 0) {\n      cartProducts.splice(index, 1);\n      updateCart(cartProducts);\n    }\n  };\n\n  proceedToCheckout = () => {\n    const {\n      totalPrice,\n      productQuantity,\n      currencyFormat,\n      currencyId\n    } = this.props.cartTotal;\n\n    if (!productQuantity) {\n      alert('Add some product in the cart!');\n    } else {\n      alert(\n        `Checkout - Subtotal: ${currencyFormat} ${formatPrice(\n          totalPrice,\n          currencyId\n        )}`\n      );\n    }\n  };\n\n  changeProductQuantity = changedProduct => {\n    const { cartProducts, updateCart } = this.props;\n\n    const product = cartProducts.find(p => p.id === changedProduct.id);\n    product.quantity = changedProduct.quantity;\n    if (product.quantity <= 0) {\n      this.removeProduct(product);\n    }\n    updateCart(cartProducts);\n  }\n\n  render() {\n    const { cartTotal, cartProducts, removeProduct, changeProductQuantity } = this.props;\n\n    const products = cartProducts.map(p => {\n      return (\n        <CartProduct product={p} removeProduct={removeProduct} changeProductQuantity={changeProductQuantity} key={p.id} />\n      );\n    });\n\n    let classes = ['float-cart'];\n\n    if (!!this.state.isOpen) {\n      classes.push('float-cart--open');\n    }\n\n    return (\n      <div className={classes.join(' ')}>\n        {/* If cart open, show close (x) button */}\n        {this.state.isOpen && (\n          <div\n            onClick={() => this.closeFloatCart()}\n            className=\"float-cart__close-btn\"\n          >\n            X\n          </div>\n        )}\n\n        {/* If cart is closed, show bag with quantity of product and open cart action */}\n        {!this.state.isOpen && (\n          <span\n            onClick={() => this.openFloatCart()}\n            className=\"bag bag--float-cart-closed\"\n          >\n            <span className=\"bag__quantity\">{cartTotal.productQuantity}</span>\n          </span>\n        )}\n\n        <div className=\"float-cart__content\">\n          <div className=\"float-cart__header\">\n            <span className=\"bag\">\n              <span className=\"bag__quantity\">{cartTotal.productQuantity}</span>\n            </span>\n            <span className=\"header-title\">Cart</span>\n          </div>\n\n          <div className=\"float-cart__shelf-container\">\n            {products}\n            {!products.length && (\n              <p className=\"shelf-empty\">\n                Add some products in the cart <br />\n                :)\n              </p>\n            )}\n          </div>\n\n          <div className=\"float-cart__footer\">\n            <div className=\"sub\">SUBTOTAL</div>\n            <div className=\"sub-price\">\n              <p className=\"sub-price__val\">\n                {`${cartTotal.currencyFormat} ${formatPrice(\n                  cartTotal.totalPrice,\n                  cartTotal.currencyId\n                )}`}\n              </p>\n              <small className=\"sub-price__installment\">\n                {!!cartTotal.installments && (\n                  <span>\n                    {`OR UP TO ${cartTotal.installments} x ${\n                      cartTotal.currencyFormat\n                    } ${formatPrice(\n                      cartTotal.totalPrice / cartTotal.installments,\n                      cartTotal.currencyId\n                    )}`}\n                  </span>\n                )}\n              </small>\n            </div>\n            <div onClick={() => this.proceedToCheckout()} className=\"buy-btn\">\n              Checkout\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  cartProducts: state.cart.products,\n  newProduct: state.cart.productToAdd,\n  productToRemove: state.cart.productToRemove,\n  productToChange: state.cart.productToChange,\n  cartTotal: state.total.data\n});\n\nexport default connect(\n  mapStateToProps,\n  { loadCart, updateCart, removeProduct, changeProductQuantity }\n)(FloatCart);\n","import { UPDATE_CART } from './actionTypes';\n\nexport const updateCart = cartProducts => dispatch => {\n  let productQuantity = cartProducts.reduce((sum, p) => {\n    sum += p.quantity;\n    return sum;\n  }, 0);\n\n  let totalPrice = cartProducts.reduce((sum, p) => {\n    sum += p.price * p.quantity;\n    return sum;\n  }, 0);\n\n  let installments = cartProducts.reduce((greater, p) => {\n    greater = p.installments > greater ? p.installments : greater;\n    return greater;\n  }, 0);\n\n  let cartTotal = {\n    productQuantity,\n    installments,\n    totalPrice,\n    currencyId: 'USD',\n    currencyFormat: '$'\n  };\n\n  dispatch({\n    type: UPDATE_CART,\n    payload: cartTotal\n  });\n};\n","export const UPDATE_CART = 'UPDATE_CART';\n","import React from 'react';\n\nimport Shelf from '../Shelf';\nimport Filter from '../Shelf/Filter';\nimport FloatCart from '../FloatCart';\n\nconst App = () => (\n  <React.Fragment>\n    <main>\n      <Filter />\n      <Shelf />\n    </main>\n    <FloatCart />\n  </React.Fragment>\n);\n\nexport default App;\n","import { FETCH_PRODUCTS } from './actionTypes';\n\nconst initialState = {\n  products: []\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case FETCH_PRODUCTS:\n      return {\n        ...state,\n        products: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","import { LOAD_CART, ADD_PRODUCT, REMOVE_PRODUCT, CHANGE_PRODUCT_QUANTITY } from './actionTypes';\n\nconst initialState = {\n  products: []\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case LOAD_CART:\n      return {\n        ...state,\n        products: action.payload\n      };\n    case ADD_PRODUCT:\n      return {\n        ...state,\n        productToAdd: Object.assign({}, action.payload)\n      };\n    case REMOVE_PRODUCT:\n      return {\n        ...state,\n        productToRemove: Object.assign({}, action.payload)\n      };\n    case CHANGE_PRODUCT_QUANTITY:\n      return {\n        ...state,\n        productToChange: Object.assign({}, action.payload)\n      };\n    default:\n      return state;\n  }\n}\n","import { UPDATE_CART } from './actionTypes';\n\nconst initialState = {\n  data: {\n    productQuantity: 0,\n    installments: 0,\n    totalPrice: 0,\n    currencyId: 'USD',\n    currencyFormat: '$'\n  }\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case UPDATE_CART:\n      return {\n        ...state,\n        data: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","import { UPDATE_FILTER } from './actionTypes';\n\nconst initialState = {\n  items: []\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case UPDATE_FILTER:\n      return {\n        ...state,\n        items: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","import { UPDATE_SORT } from './actionTypes';\n\nconst initialState = {\n  type: ''\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case UPDATE_SORT:\n      return {\n        ...state,\n        type: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport shelfReducer from './shelf/reducer';\nimport cartReducer from './cart/reducer';\nimport totalReducer from './total/reducer';\nimport filtersReducer from './filters/reducer';\nimport sortReducer from './sort/reducer';\n\nexport default combineReducers({\n  shelf: shelfReducer,\n  cart: cartReducer,\n  total: totalReducer,\n  filters: filtersReducer,\n  sort: sortReducer\n});\n","import { compose, createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nexport default initialState => {\n  initialState =\n    JSON.parse(window.localStorage.getItem('state')) || initialState;\n  const middleware = [thunk];\n\n  const store = createStore(\n    rootReducer,\n    initialState,\n    compose(\n      applyMiddleware(...middleware)\n    )\n  );\n\n  store.subscribe(() => {\n    const state = store.getState();\n    const persist = {\n      cart: state.cart,\n      total: state.total\n    };\n\n    window.localStorage.setItem('state', JSON.stringify(persist));\n  });\n\n  return store;\n};\n","import React from 'react';\nimport { Provider } from 'react-redux';\n\nimport store from './services/store';\n\nconst Root = ({ children, initialState = {} }) => (\n  <Provider store={store(initialState)}>{children}</Provider>\n);\n\nexport default Root;\n","import 'babel-polyfill'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\nimport Root from './Root';\n\nimport './index.scss';\n\nReactDOM.render(\n  <Root>\n    <App />\n  </Root>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}