{"ast":null,"code":"import _classCallCheck from \"/workspace/shopping-cart-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/workspace/shopping-cart-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/workspace/shopping-cart-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/workspace/shopping-cart-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/workspace/shopping-cart-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/workspace/shopping-cart-react/src/components/FloatCart/index.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { loadCart, removeProduct, changeProductQuantity } from '../../services/cart/actions';\nimport { updateCart } from '../../services/total/actions';\nimport CartProduct from './CartProduct';\nimport { formatPrice } from '../../services/util';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faShoppingCart } from '@fortawesome/free-solid-svg-icons';\nimport './style.scss';\n\nvar FloatCart =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(FloatCart, _Component);\n\n  function FloatCart() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, FloatCart);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(FloatCart)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isOpen: false\n    };\n\n    _this.openFloatCart = function () {\n      _this.setState({\n        isOpen: true\n      });\n    };\n\n    _this.closeFloatCart = function () {\n      _this.setState({\n        isOpen: false\n      });\n    };\n\n    _this.addProduct = function (product) {\n      var _this$props = _this.props,\n          cartProducts = _this$props.cartProducts,\n          updateCart = _this$props.updateCart;\n      var productAlreadyInCart = false;\n      cartProducts.forEach(function (cp) {\n        if (cp.id === product.id) {\n          cp.quantity += product.quantity;\n          productAlreadyInCart = true;\n        }\n      });\n\n      if (!productAlreadyInCart) {\n        cartProducts.push(product);\n      }\n\n      updateCart(cartProducts);\n    };\n\n    _this.removeProduct = function (product) {\n      var _this$props2 = _this.props,\n          cartProducts = _this$props2.cartProducts,\n          updateCart = _this$props2.updateCart;\n      var index = cartProducts.findIndex(function (p) {\n        return p.id === product.id;\n      });\n\n      if (index >= 0) {\n        cartProducts.splice(index, 1);\n        updateCart(cartProducts);\n      }\n    };\n\n    _this.changeProductQuantity = function (changedProduct) {\n      var _this$props3 = _this.props,\n          cartProducts = _this$props3.cartProducts,\n          updateCart = _this$props3.updateCart;\n      var product = cartProducts.find(function (p) {\n        return p.id === changedProduct.id;\n      });\n      product.quantity = changedProduct.quantity;\n\n      if (product.quantity <= 0) {\n        _this.removeProduct(product);\n      }\n\n      updateCart(cartProducts);\n    };\n\n    return _this;\n  }\n\n  _createClass(FloatCart, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.newProduct !== this.props.newProduct) {\n        this.addProduct(nextProps.newProduct);\n      }\n\n      if (nextProps.productToRemove !== this.props.productToRemove) {\n        this.removeProduct(nextProps.productToRemove);\n      }\n\n      if (nextProps.productToChange !== this.props.productToChange) {\n        this.changeProductQuantity(nextProps.productToChange);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props4 = this.props,\n          cartTotal = _this$props4.cartTotal,\n          cartProducts = _this$props4.cartProducts,\n          removeProduct = _this$props4.removeProduct,\n          changeProductQuantity = _this$props4.changeProductQuantity;\n      var products = cartProducts.map(function (p) {\n        return React.createElement(CartProduct, {\n          product: p,\n          removeProduct: removeProduct,\n          changeProductQuantity: changeProductQuantity,\n          key: p.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        });\n      });\n      var classes = ['float-cart'];\n\n      if (!!this.state.isOpen) {\n        classes.push('float-cart--open');\n      }\n\n      return React.createElement(\"div\", {\n        className: classes.join(' '),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, this.state.isOpen && React.createElement(\"div\", {\n        onClick: function onClick() {\n          return _this2.closeFloatCart();\n        },\n        className: \"float-cart__close-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"Home\"), !this.state.isOpen && React.createElement(\"div\", {\n        onClick: function onClick() {\n          return _this2.openFloatCart();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(FontAwesomeIcon, {\n        icon: faShoppingCart,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"bag__quantity\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, cartTotal.productQuantity)), React.createElement(\"div\", {\n        className: \"float-cart__content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"float-cart__header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"bag\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"bag__quantity\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, cartTotal.productQuantity)), React.createElement(\"span\", {\n        className: \"header-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, \"Cart\")), React.createElement(\"div\", {\n        className: \"float-cart__shelf-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, products, !products.length && React.createElement(\"p\", {\n        className: \"shelf-empty\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, \"Add some products in the cart \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }), \":)\")), React.createElement(\"div\", {\n        className: \"float-cart__footer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, \"PRICE DETAILS\"), React.createElement(\"div\", {\n        className: \"sub\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, \"Total Payable\"), React.createElement(\"div\", {\n        className: \"sub-price\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"sub-price__val\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, \"\".concat(cartTotal.currencyFormat, \" \").concat(formatPrice(cartTotal.totalPrice, cartTotal.currencyId)))))));\n    }\n  }]);\n\n  return FloatCart;\n}(Component);\n\nFloatCart.propTypes = {\n  loadCart: PropTypes.func.isRequired,\n  updateCart: PropTypes.func.isRequired,\n  cartProducts: PropTypes.array.isRequired,\n  newProduct: PropTypes.object,\n  removeProduct: PropTypes.func,\n  productToRemove: PropTypes.object,\n  changeProductQuantity: PropTypes.func,\n  productToChange: PropTypes.object\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    cartProducts: state.cart.products,\n    newProduct: state.cart.productToAdd,\n    productToRemove: state.cart.productToRemove,\n    productToChange: state.cart.productToChange,\n    cartTotal: state.total.data\n  };\n};\n\nexport default connect(mapStateToProps, {\n  loadCart: loadCart,\n  updateCart: updateCart,\n  removeProduct: removeProduct,\n  changeProductQuantity: changeProductQuantity\n})(FloatCart);","map":{"version":3,"sources":["/workspace/shopping-cart-react/src/components/FloatCart/index.js"],"names":["React","Component","PropTypes","connect","loadCart","removeProduct","changeProductQuantity","updateCart","CartProduct","formatPrice","FontAwesomeIcon","faShoppingCart","FloatCart","state","isOpen","openFloatCart","setState","closeFloatCart","addProduct","product","props","cartProducts","productAlreadyInCart","forEach","cp","id","quantity","push","index","findIndex","p","splice","changedProduct","find","nextProps","newProduct","productToRemove","productToChange","cartTotal","products","map","classes","join","productQuantity","length","currencyFormat","totalPrice","currencyId","propTypes","func","isRequired","array","object","mapStateToProps","cart","productToAdd","total","data"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { loadCart, removeProduct, changeProductQuantity } from '../../services/cart/actions';\nimport { updateCart } from '../../services/total/actions';\nimport CartProduct from './CartProduct';\nimport { formatPrice } from '../../services/util';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faShoppingCart } from '@fortawesome/free-solid-svg-icons';\n\nimport './style.scss';\n\nclass FloatCart extends Component {\n  static propTypes = {\n    loadCart: PropTypes.func.isRequired,\n    updateCart: PropTypes.func.isRequired,\n    cartProducts: PropTypes.array.isRequired,\n    newProduct: PropTypes.object,\n    removeProduct: PropTypes.func,\n    productToRemove: PropTypes.object,\n    changeProductQuantity: PropTypes.func,\n    productToChange: PropTypes.object,\n  };\n\n  state = {\n    isOpen: false\n  };\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.newProduct !== this.props.newProduct) {\n      this.addProduct(nextProps.newProduct);\n    }\n\n    if (nextProps.productToRemove !== this.props.productToRemove) {\n      this.removeProduct(nextProps.productToRemove);\n    }\n\n    if (nextProps.productToChange !== this.props.productToChange) {\n      this.changeProductQuantity(nextProps.productToChange);\n    }\n  }\n\n  openFloatCart = () => {\n    this.setState({ isOpen: true });\n  };\n\n  closeFloatCart = () => {\n    this.setState({ isOpen: false });\n  };\n\n  addProduct = product => {\n    const { cartProducts, updateCart } = this.props;\n    let productAlreadyInCart = false;\n\n    cartProducts.forEach(cp => {\n      if (cp.id === product.id) {\n        cp.quantity += product.quantity;\n        productAlreadyInCart = true;\n      }\n    });\n\n    if (!productAlreadyInCart) {\n      cartProducts.push(product);\n    }\n\n    updateCart(cartProducts);\n  };\n\n  removeProduct = product => {\n    const { cartProducts, updateCart } = this.props;\n\n    const index = cartProducts.findIndex(p => p.id === product.id);\n    if (index >= 0) {\n      cartProducts.splice(index, 1);\n      updateCart(cartProducts);\n    }\n  };\n\n  changeProductQuantity = changedProduct => {\n    const { cartProducts, updateCart } = this.props;\n\n    const product = cartProducts.find(p => p.id === changedProduct.id);\n    product.quantity = changedProduct.quantity;\n    if (product.quantity <= 0) {\n      this.removeProduct(product);\n    }\n    updateCart(cartProducts);\n  }\n\n  render() {\n    const { cartTotal, cartProducts, removeProduct, changeProductQuantity } = this.props;\n\n    const products = cartProducts.map(p => {\n      return (\n        <CartProduct product={p} removeProduct={removeProduct} changeProductQuantity={changeProductQuantity} key={p.id} />\n      );\n    });\n\n    let classes = ['float-cart'];\n\n    if (!!this.state.isOpen) {\n      classes.push('float-cart--open');\n    }\n\n    return (\n      <div className={classes.join(' ')}>\n        {/* If cart open, home button */}\n        {this.state.isOpen && (\n          <div\n            onClick={() => this.closeFloatCart()}\n            className=\"float-cart__close-btn\"\n          >\n            Home\n          </div>\n        )}\n\n        {/* If cart is closed, show bag with quantity of product and open cart action */}\n        {!this.state.isOpen && (\n          <div\n            onClick={() => this.openFloatCart()}\n           \n          >\n           <FontAwesomeIcon icon={faShoppingCart} />\n            <span className=\"bag__quantity\">{cartTotal.productQuantity}</span>\n          </div>\n        )}\n\n        <div className=\"float-cart__content\">\n          <div className=\"float-cart__header\">\n            <span className=\"bag\">\n              <span className=\"bag__quantity\">{cartTotal.productQuantity}</span>\n            </span>\n            <span className=\"header-title\">Cart</span>\n          </div>\n\n          <div className=\"float-cart__shelf-container\">\n            {products}\n            {!products.length && (\n              <p className=\"shelf-empty\">\n                Add some products in the cart <br />\n                :)\n              </p>\n            )}\n          </div>\n\n          <div className=\"float-cart__footer\">\n            <h3>PRICE DETAILS</h3>\n            {/* <div className=\"sub\">Price (1 item)</div>\n             <div className=\"sub-price\">\n              <p className=\"sub-price__val\">\n                {products.price*(products.discount/100) + products.price}\n              </p>\n            </div>\n                <div className=\"sub\">Discount</div>\n             <div className=\"sub-price\">\n              <p className=\"sub-price__val\">\n                 {products.discount}\n              </p>\n            </div> */}\n\n            <div className=\"sub\">Total Payable</div>\n            <div className=\"sub-price\">\n              <p className=\"sub-price__val\">\n                {`${cartTotal.currencyFormat} ${formatPrice(\n                  cartTotal.totalPrice,\n                  cartTotal.currencyId\n                )}`}\n              </p>\n             \n            </div>\n            \n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  cartProducts: state.cart.products,\n  newProduct: state.cart.productToAdd,\n  productToRemove: state.cart.productToRemove,\n  productToChange: state.cart.productToChange,\n  cartTotal: state.total.data\n});\n\nexport default connect(\n  mapStateToProps,\n  { loadCart, updateCart, removeProduct, changeProductQuantity }\n)(FloatCart);\n"]},"metadata":{},"sourceType":"module"}